@import"//hello.myfonts.net/count/2c139a";@charset "UTF-8";html{font-size:22px}body{color:#333;line-height:1.5;font-family:URWGrotesk-Reg,sans-serif;margin-top:0;-webkit-font-smoothing:antialiased}h1,h2,h3,h4,h5,h6{font-size:22px;font-size:1rem;font-weight:400}ol{padding-left:66px;padding-left:3rem}li{margin-top:0;margin-bottom:0}p,ol,ul{padding-bottom:33px;padding-bottom:1.5rem}figure.wide{height:660px;overflow:hidden;width:100%}figure.wide img{width:100%;top:50%;left:50%;position:relative;-webkit-transform:translateY(-50%) translateX(-50%);-moz-transform:translateY(-50%) translateX(-50%);-ms-transform:translateY(-50%) translateX(-50%);-o-transform:translateY(-50%) translateX(-50%);transform:translateY(-50%) translateX(-50%)}\::-moz-selection{background:#fec057}\::selection{background:#fec057}.full{width:100%}.listOn ol li,ol.simpleList li{list-style-type:decimal;padding-left:5px;padding-left:.25rem;margin-left:-5px;margin-left:-.25rem}ol.simpleList li ol li{list-style-type:lower-alpha;padding-left:5px;padding-left:.25rem;margin-left:-5px;margin-left:-.25rem}ol.simpleList li ol li ol li{list-style-type:lower-roman;padding-left:5px;padding-left:.25rem;margin-left:-5px;margin-left:-.25rem}.listOn ul li,ul.simpleList li{list-style-type:disc;padding-left:5px;padding-left:.25rem;margin-left:-5px;margin-left:-.25rem}ul.simpleList li ul li{list-style-type:circle;padding-left:5px;padding-left:.25rem;margin-left:-5px;margin-left:-.25rem}ol.listSpace li{padding-top:33px;padding-top:1.5rem}input,textarea{width:100%}.bold,strong{font-weight:700}.normal{font-weight:300}.italic{font-style:italic!important}.upcase,.upCase,.caps{text-transform:uppercase}.inherit{font-size:inherit}.textCenter,.textC{text-align:center}.textLeft,.textL{text-align:left}.textRight,.textR{text-align:right}.indent{text-indent:66px;text-indent:3rem}*{margin:0;padding:0}html{-moz-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-moz-box-sizing:inherit;box-sizing:inherit}body{margin:0}a{text-decoration:none}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section{display:block}blockquote,q{quotes:none}blockquote:before,blockquote:after,q:before,q:after{content:'';content:none}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:URWGrotesk-Reg;src:url(/webfonts/2C139A_24_0.eot);src:url(/webfonts/2C139A_24_0.eot?#iefix) format("embedded-opentype"),url(/webfonts/2C139A_24_0.woff) format("woff"),url(/webfonts/2C139A_24_0.ttf) format("truetype")}@font-face{font-family:URWGrotesk-RegIta;src:url(/webfonts/2C139A_2C_0.eot);src:url(/webfonts/2C139A_2C_0.eot?#iefix) format("embedded-opentype"),url(/webfonts/2C139A_2C_0.woff) format("woff"),url(/webfonts/2C139A_2C_0.ttf) format("truetype")}@font-face{font-family:URWGrotesk-Bol;src:url(/webfonts/2C139A_37_0.eot);src:url(/webfonts/2C139A_37_0.eot?#iefix) format("embedded-opentype"),url(/webfonts/2C139A_37_0.woff) format("woff"),url(/webfonts/2C139A_37_0.ttf) format("truetype")}@font-face{font-family:URWGrotesk-BolIta;src:url(/webfonts/2C139A_6_0.eot);src:url(/webfonts/2C139A_6_0.eot?#iefix) format("embedded-opentype"),url(/webfonts/2C139A_6_0.woff) format("woff"),url(/webfonts/2C139A_6_0.ttf) format("truetype")}@font-face{font-family:URWGroteskCon-Lig;src:url(/webfonts/2C139A_1E_0.eot);src:url(/webfonts/2C139A_1E_0.eot?#iefix) format("embedded-opentype"),url(/webfonts/2C139A_1E_0.woff) format("woff"),url(/webfonts/2C139A_1E_0.ttf) format("truetype")}@font-face{font-family:URWGroteskCon-Bol;src:url(/webfonts/2C139A_31_0.eot);src:url(/webfonts/2C139A_31_0.eot?#iefix) format("embedded-opentype"),url(/webfonts/2C139A_31_0.woff) format("woff"),url(/webfonts/2C139A_31_0.ttf) format("truetype")}svg{height:100%;width:100%}.slawcube{fill:white}.diamond{fill:#a5a7aa}.codepen{fill:#a5a7aa}.container{margin-top:0}[class*=__container]{margin:0 auto;max-width:1200px;padding:0 44px;padding:0 2rem}div[class*="--col"]{float:left}.clearfix:after{content:"";display:table;clear:both}.stretch{-moz-background-size:cover;background-size:cover;background-position:center center;background-repeat:no-repeat}.fixed-img{background-position:center center;background-repeat:no-repeat;background-attachment:fixed;-moz-background-size:cover;background-size:cover}img,iframe,embed{max-width:100%}.make-gallery div{float:left;list-style:none}.square-4 div{width:25%;height:0;padding-bottom:25%}.square-3 div{width:33.3333%;height:0;padding-bottom:33.3333%}.square-2 div{width:50%;height:0;padding-bottom:50%}.container{padding-top:132px;padding-top:6rem}.footer{background-color:#333;padding:66px 0;padding:3rem 0;text-align:center}.footer__text{color:#a5a7aa;text-align:center}.footer a{color:#007ac2}.footer a:hover{color:#ef3e42}.twitter-share-button{vertical-align:-15%;margin-right:-25px!important}.logo{border-bottom:none!important;opacity:.2;filter:alpha(opacity=20);padding:15px;display:inline-block;-webkit-transition:all .4s;-moz-transition:all .4s;-o-transition:all .4s;transition:all .4s}.logo:hover{opacity:1;filter:alpha(opacity=100)}.social-icons{display:inline-block;height:44px;height:2rem;width:44px;width:2rem}a.brandmark-bottom{color:#a5a7aa;display:inline-block;font-size:44px;font-size:2rem;letter-spacing:-2px;text-align:center}a.brandmark-bottom .a{color:#ef3e42}a.brandmark-bottom .r{color:#007ac2}a.brandmark-bottom .t{color:#fec057}a.brandmark-bottom:hover{color:#333}[data-icon]:before{content:'\2630';speak:none;font-weight:400;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;font-size:39px;font-size:1.8rem;-webkit-transition:color .2s;-moz-transition:color .2s;-o-transition:color .2s;transition:color .2s}body.no_scroll{overflow:hidden;height:100%}@-moz-document url-prefix(){body.no_scroll .expanded{background:rgba(255,255,255,.95)}}a.brandmark{color:#a5a7aa;display:table-cell;font-size:39px;font-size:1.8rem;letter-spacing:-2px}a.brandmark .a{color:#ef3e42}a.brandmark .r{color:#007ac2}a.brandmark .t{color:#fec057}a.brandmark:hover{color:#333}.tagline{color:#ccc;font-family:URWGroteskCon-Lig,sans-serif;font-size:27px;font-size:1.25rem;letter-spacing:4px;text-transform:uppercase}@-webkit-keyframes firstFadeInAndDrop{0%{-webkit-transform:translate(0,-54px);transform:translate(0,-54px)}100%{-webkit-transform:translate(0,0);transform:translate(0,0)}}@-moz-keyframes firstFadeInAndDrop{0%{-moz-transform:translate(0,-54px);transform:translate(0,-54px)}100%{-moz-transform:translate(0,0);transform:translate(0,0)}}@-o-keyframes firstFadeInAndDrop{0%{-o-transform:translate(0,-54px);transform:translate(0,-54px)}100%{-o-transform:translate(0,0);transform:translate(0,0)}}@keyframes firstFadeInAndDrop{0%{-webkit-transform:translate(0,-54px);-moz-transform:translate(0,-54px);-o-transform:translate(0,-54px);transform:translate(0,-54px)}100%{-webkit-transform:translate(0,0);-moz-transform:translate(0,0);-o-transform:translate(0,0);transform:translate(0,0)}}.laxnav{background:rgba(255,255,255,.75);cursor:pointer;height:132px;height:6rem;overflow:hidden;position:absolute;right:0;top:0;width:100%;z-index:1000;-moz-box-shadow:0 1px 0 #ccc;box-shadow:0 1px 0 #ccc;-webkit-transform:translate(0,0);-moz-transform:translate(0,0);-ms-transform:translate(0,0);-o-transform:translate(0,0);transform:translate(0,0);-webkit-transition:-webkit-transform .2s,height .2s,background .2s;-moz-transition:-moz-transform .2s,height .2s,background .2s;-o-transition:-o-transform .2s,height .2s,background .2s;transition:transform .2s,height .2s,background .2s;-webkit-animation:firstFadeInAndDrop .2s;-moz-animation:firstFadeInAndDrop .2s;-o-animation:firstFadeInAndDrop .2s;animation:firstFadeInAndDrop .2s}.laxnav:hover{background:white}.laxnav__bar{-moz-box-sizing:border-box;box-sizing:border-box;display:table;padding:44px;padding:2rem;width:100%}.laxnav__bar>a{font-weight:700;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.laxnav.invisible{-webkit-transform:translate(0,-64px);-moz-transform:translate(0,-64px);-ms-transform:translate(0,-64px);-o-transform:translate(0,-64px);transform:translate(0,-64px);-webkit-transition:-webkit-transform .2s;-moz-transition:-moz-transform .2s;-o-transition:-o-transform .2s;transition:transform .2s;opacity:0;filter:alpha(opacity=0)}.laxnav.detached{position:fixed;background:rgba(255,255,255,.9);-webkit-transition:-webkit-transform .2s,height .2s,background .2s,opacity .2s;-moz-transition:-moz-transform .2s,height .2s,background .2s,opacity .2s;-o-transition:-o-transform .2s,height .2s,background .2s,opacity .2s;transition:transform .2s,height .2s,background .2s,opacity .2s}.laxnav.expanded{width:100%;height:100%;position:fixed;cursor:default;background:rgba(255,255,255,.8);overflow-y:scroll}.laxnav.expanded #laxnav__menu{-webkit-transform:translate(0,0);-moz-transform:translate(0,0);-ms-transform:translate(0,0);-o-transform:translate(0,0);transform:translate(0,0);opacity:1;filter:alpha(opacity=100)}.laxnav__menu{opacity:0;filter:alpha(opacity=0);width:60%;margin:0 auto;-webkit-transform:translate(0,-1000px);-moz-transform:translate(0,-1000px);-ms-transform:translate(0,-1000px);-o-transform:translate(0,-1000px);transform:translate(0,-1000px);-webkit-transition:-webkit-transform .15s,opacity .2s;-moz-transition:-moz-transform .15s,opacity .2s;-o-transition:-o-transform .15s,opacity .2s;transition:transform .15s,opacity .2s}.laxnav__menu-list-item{list-style-type:none;-moz-box-shadow:0 1px 0 #ccc;box-shadow:0 1px 0 #ccc}.laxnav__menu-list-anchor{color:#007ac2;display:block;font-size:33px;font-size:1.5rem;font-family:URWGroteskCon-Bol,sans-serif;padding:.1em 11px;padding:.1em .5rem;text-transform:uppercase}.laxnav__menu-list-anchor:hover{background:#ef3e42;color:#fff}.laxnav__link-text{display:inline-block;width:200px}.laxnav__link-teaser{color:#333;font-family:URWGroteskCon-Lig,sans-serif}.icon-btn{cursor:pointer;display:table-cell;text-align:right;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.icon-btn span{color:#007ac2;font-family:URWGroteskCon-Lig,sans-serif;font-size:22px;font-size:1rem;letter-spacing:4px;text-transform:uppercase}.icon-btn:focus{outline:none}.icon-btn:before,.icon-btn:active:before{color:#007ac2}.icon-btn:hover:before,.icon-btn:focus:before{color:#ef3e42}.expanded .icon-btn:before{content:'\002715';font-size:44px;font-size:2rem;font-weight:700;padding-right:3px;padding-right:.15rem}.content-transition{-webkit-transition:-webkit-transform .2s,-webkit-filter .2s,-webkit-transform .2s,filter .2s;-moz-transition:-moz-transform .2s,filter .2s;-o-transition:-o-transform .2s,filter .2s;transition:transform .2s,filter .2s}.imgBanner{background-position:center center;background-repeat:no-repeat;background-attachment:fixed;-moz-background-size:cover;background-size:cover;font-family:URWGroteskCon-Lig,sans-serif;width:100%;height:100%;position:relative;z-index:0}.imgBanner:before{content:" ";height:100%;width:100%;display:block;position:absolute;bottom:0;left:0;background:-webkit-linear-gradient(top,rgba(255,255,255,0) 0,transparent 1%,rgba(0,0,0,.05) 26%,rgba(0,0,0,.5) 71%,rgba(0,0,0,.7) 100%)}.imgBanner__container{background:transparent;position:relative;z-index:5}.imgBanner__heading{color:#fff;font-size:176px;font-size:8rem;margin:0;padding-top:264px;padding-top:12rem;text-align:center;text-transform:uppercase;-webkit-transform:translate(0,0);-moz-transform:translate(0,0);-ms-transform:translate(0,0);-o-transform:translate(0,0);transform:translate(0,0);-webkit-transition:-webkit-transform .4s,height .3s,background .4s;-moz-transition:-moz-transform .4s,height .3s,background .4s;-o-transition:-o-transform .4s,height .3s,background .4s;transition:transform .4s,height .3s,background .4s;-webkit-animation:firstFadeInAndDrop .5s;-moz-animation:firstFadeInAndDrop .5s;-o-animation:firstFadeInAndDrop .5s;animation:firstFadeInAndDrop .5s}.imgBanner__text{color:#fff;font-size:132px;font-size:6rem;font-family:learning-curve;margin:0;padding-bottom:264px;padding-bottom:12rem;text-align:center}.mainContent{background-color:#fff;padding:0 0 66px;padding:0 0 3rem}.mainContent__container{width:65%;margin:0 auto}.mainContent__heading{font-family:URWGroteskCon-Lig,sans-serif;font-size:66px;font-size:3rem;line-height:1;margin:0;padding-top:110px;padding-top:5rem;position:relative;text-align:center;text-transform:uppercase}.mainContent__heading:after{-moz-box-shadow:1px 1px 0 #333;box-shadow:1px 1px 0 #333;content:"";display:block;height:1px;width:330px;width:15rem;margin:16px auto;margin:.75rem auto}.mainContent__subHeading{font-family:URWGroteskCon-Lig,sans-serif;font-size:44px;font-size:2rem;line-height:1;margin:0;padding:66px 0 33px;padding:3rem 0 1.5rem;text-align:center}.mainContent__date{color:#ccc;font-family:URWGroteskCon-Lig,sans-serif;font-size:44px;font-size:2rem;text-align:center}.mainContent__md{color:#333;padding-bottom:66px;padding-bottom:3rem}.mainContent__md h1,.mainContent__md h2,.mainContent__md h3,.mainContent__md h4,.mainContent__md h5,.mainContent__md h6{font-family:URWGroteskCon-Bol,sans-serif;font-size:44px;font-size:2rem;line-height:1;margin:0;padding:66px 0 33px;padding:3rem 0 1.5rem;text-align:center}.mainContent__md iframe{margin:66px 0;margin:3rem 0}.megaStatement{background:#fff;font-family:URWGroteskCon-Lig,sans-serif;width:100%;height:100%;padding:66px;padding:3rem;position:relative;z-index:0}.megaStatement__textBox{background:transparent;position:relative;z-index:5}.megaStatement__heading{color:#a5a7aa;font-size:132px;font-size:6rem;text-align:center;text-transform:uppercase;margin-top:66px;margin-bottom:66px}.megaStatement__content{color:#fff;font-size:132px;font-size:6rem;font-family:learning-curve;margin:0;padding-bottom:110px;padding-bottom:5rem;text-align:center}.megaCTA{background-position:center center;background-repeat:no-repeat;background-attachment:fixed;-moz-background-size:cover;background-size:cover;font-family:URWGroteskCon-Lig,sans-serif;width:100%;height:100%;position:relative;z-index:0}.megaCTA:before{content:" ";height:100%;width:100%;display:block;position:absolute;bottom:0;left:0;background:-webkit-linear-gradient(top,rgba(255,255,255,0) 0,transparent 1%,rgba(0,0,0,.05) 26%,rgba(0,0,0,.5) 71%,rgba(0,0,0,.7) 100%)}.megaCTA__container{background:transparent;position:relative;z-index:5;padding-top:264px;padding-bottom:264px}.megaCTA__heading{color:#fff;font-size:176px;font-size:8rem;margin:0;text-align:center;text-transform:uppercase}.megaCTA__text{color:#fff;font-size:132px;font-size:6rem;font-family:learning-curve;margin:0;text-align:center}.megaCTA__button{font-size:inherit;-webkit-transition:all .1s ease-in;-moz-transition:all .1s ease-in;-o-transition:all .1s ease-in;transition:all .1s ease-in;background:rgba(0,122,194,.75);-moz-border-radius:.25rem;border-radius:.25rem;color:#fff;display:inline-block;font-family:learning-curve;padding:0 11px;padding:0 .5rem;text-align:center}.megaCTA__button:hover{background:rgba(255,255,255,.9);color:#007ac2}.chartBox{background:#ef3e42;color:white;margin-bottom:1px;padding:66px 0;padding:3rem 0;text-align:center}.chartBox__heading{color:#fff;font-family:URWGroteskCon-Lig,sans-serif;font-size:66px;font-size:3rem;line-height:1;margin:0;padding-top:5rrem;position:relative;text-align:center;text-transform:uppercase}.chartBox__stat{display:inline-block;font-family:URWGroteskCon-Lig,sans-serif;font-size:44px;font-size:2rem;padding:0 66px;padding:0 3rem}.chartBox__stat span{font-size:110px;font-size:5rem}.chartBox p{margin:0 auto 33px;margin:0 auto 1.5rem;text-align:left;width:50%}.chart{position:relative;display:inline-block;margin:22px;margin:1rem}.chart canvas{position:absolute;top:0;left:0}.chart__percent{font-family:URWGroteskCon-Lig,sans-serif;display:inline-block;font-size:44px;font-size:2rem}.chart__percent:after{content:"%"}.articleCTA{background:#fec057;padding-bottom:66px;padding-bottom:3rem}.articleCTA__container{width:50%;margin:0 auto}.articleCTA__heading{color:#333;font-family:URWGroteskCon-Lig,sans-serif;font-size:66px;font-size:3rem;line-height:1;margin:0;padding-top:110px;padding-top:5rem;position:relative;text-align:center;text-transform:uppercase}.articleCTA__heading:after{-moz-box-shadow:1px 1px 0 #333;box-shadow:1px 1px 0 #333;content:"";display:block;height:1px;width:330px;width:15rem;margin:16px auto;margin:.75rem auto}.articleCTA__headingLink{color:#007ac2}.articleCTA__headingLink:hover{color:#ef3e42}.articleCTA__md{color:#333;padding-bottom:66px;padding-bottom:3rem}.articleCTA__text{text-align:center}.articleCTA__button{font-size:66px;font-size:3rem;-webkit-transition:all .1s ease-in;-moz-transition:all .1s ease-in;-o-transition:all .1s ease-in;transition:all .1s ease-in;background:rgba(0,122,194,.75);-moz-border-radius:.25rem;border-radius:.25rem;color:#fff;display:inline-block;font-family:learning-curve;padding:0 11px;padding:0 .5rem;text-align:center}.articleCTA__button:hover{background:rgba(255,255,255,.9);color:#007ac2}.articleList{background-color:#f5f5f5;-moz-box-shadow:0 -1px 0 #a5a7aa;box-shadow:0 -1px 0 #a5a7aa;padding:66px 0;padding:3rem 0}.articleList__container{margin:0 auto;width:50%}.articleList__heading{-moz-box-shadow:0 1px 0 #a5a7aa;box-shadow:0 1px 0 #a5a7aa;font-family:URWGroteskCon-Lig,sans-serif;font-size:44px;font-size:2rem;line-height:1}.articleList__link{color:#007ac2;display:block;padding:5px;padding:.25rem}.articleList__link:hover{background-color:#ef3e42;color:#fff}body{overflow-x:hidden}body.overflow-hidden{overflow:hidden}main{position:relative;-webkit-transition-property:-webkit-transform;-moz-transition-property:-moz-transform;-o-transition-property:-o-transform;transition-property:transform;-webkit-transition-duration:.3s;-moz-transition-duration:.3s;-o-transition-duration:.3s;transition-duration:.3s}main.slide-out{-webkit-transform:translateX(-270px);-moz-transform:translateX(-270px);-ms-transform:translateX(-270px);-o-transform:translateX(-270px);transform:translateX(-270px)}main.slide-out .reveal__overlay{display:block;-webkit-animation:reveal__fade-in .3s;-moz-animation:reveal__fade-in .3s;-o-animation:reveal__fade-in .3s;animation:reveal__fade-in .3s}.reveal{background:#fff;padding:0 0 22px;padding:0 0 1rem;text-align:center}.reveal__container:after{content:'';display:table;clear:both}.reveal__heading{color:#1a2f2a;font-family:URWGroteskCon-Bol,sans-serif;font-weight:700;text-transform:uppercase;margin-bottom:22px;margin-bottom:1rem}.reveal__placeholder-1{background:#f25f5c;color:#fdeaea}.reveal__placeholder-2{background:#FFF}.reveal li{margin-bottom:44px;margin-bottom:2rem;-moz-border-radius:.25rem;border-radius:.25rem;-moz-box-shadow:0 0 10px rgba(254,192,87,0);box-shadow:0 0 10px rgba(254,192,87,0);-webkit-transition:all .3s;-moz-transition:all .3s;-o-transition:all .3s;transition:all .3s}.reveal__figure{margin:0;display:block;overflow:hidden;position:relative;background-position:50%;background-repeat:no-repeat;-moz-background-size:cover;background-size:cover;max-height:550px;max-width:100%}.reveal__figure:after{content:"";display:block;padding-bottom:75%;width:100%}.reveal img{display:block;width:100%;-moz-border-radius:.25rem .25rem 0 0;border-radius:.25rem .25rem 0 0}.reveal__img-overlay{position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(0,122,194,.9);opacity:0;filter:alpha(opacity=0);-moz-border-radius:.25rem .25rem 0 0;border-radius:.25rem .25rem 0 0;-webkit-transition:opacity .3s;-moz-transition:opacity .3s;-o-transition:opacity .3s;transition:opacity .3s}.reveal__img-overlay span{position:absolute;left:50%;top:50%;bottom:auto;right:auto;-webkit-transform:translateX(-50%) translateY(-50%);-moz-transform:translateX(-50%) translateY(-50%);-ms-transform:translateX(-50%) translateY(-50%);-o-transform:translateX(-50%) translateY(-50%);transform:translateX(-50%) translateY(-50%);color:#FFF;font-size:44px;font-size:2rem;font-family:URWGroteskCon-Lig,sans-serif}.reveal__box-info{background:#007ac2;text-align:center;font-family:URWGroteskCon-Lig,sans-serif;font-weight:700;padding:5px 0;padding:.25rem 0;color:#fff;font-size:44px;font-size:2rem;text-transform:uppercase}.reveal__box-info span{display:block;font-weight:400;margin-top:11px;margin-top:.5rem}.reveal__box-info small{font-weight:400}.no-touch .reveal li:hover{-moz-box-shadow:0 0 10px rgba(254,192,87,.3);box-shadow:0 0 10px rgba(254,192,87,.3)}.no-touch .reveal li:hover .reveal__img-overlay{opacity:1;filter:alpha(opacity=100)}.reveal-panel__pic-flexembed{display:block;overflow:hidden;position:relative;background-position:50%;background-repeat:no-repeat;-moz-background-size:cover;background-size:cover;max-height:550px;max-width:100%}.reveal-panel__pic-flexembed:after{content:"";display:block;padding-bottom:75%;width:100%}.reveal-panel{position:fixed;top:0;right:0;width:270px;height:100%;overflow-y:auto;-webkit-overflow-scrolling:touch;background:#fec057;z-index:1001;-webkit-transform:translateX(270px);-moz-transform:translateX(270px);-ms-transform:translateX(270px);-o-transform:translateX(270px);transform:translateX(270px);-webkit-transition-property:-webkit-transform;-moz-transition-property:-moz-transform;-o-transition-property:-o-transform;transition-property:transform;-webkit-transition-duration:.3s;-moz-transition-duration:.3s;-o-transition-duration:.3s;transition-duration:.3s}.reveal-panel.slide-in{-webkit-transform:translateX(0);-moz-transform:translateX(0);-ms-transform:translateX(0);-o-transform:translateX(0);transform:translateX(0)}.reveal-panel__pic{position:relative}.reveal-panel__pic:after{content:'';position:absolute;bottom:0;left:0;width:100%;height:80px;background:-webkit-linear-gradient(bottom,#fec057,rgba(254,192,87,0));background:-moz-linear-gradient(bottom,#fec057,rgba(254,192,87,0));background:-o-linear-gradient(bottom,#fec057,rgba(254,192,87,0));background:linear-gradient(to top,#fec057,rgba(254,192,87,0))}.reveal-panel img{width:100%;display:block}.reveal-panel .reveal-panel__bio-content{padding:22px;padding:1rem;color:#fff}.reveal-panel .reveal-panel__bio-content-title{color:#fff;font-family:URWGroteskCon-Lig,sans-serif;font-size:66px;font-size:3rem;line-height:1;margin:0;padding-top:110px;padding-top:5rem;position:relative;text-align:center;text-transform:uppercase}.reveal-panel .reveal-panel__bio-content-title:after{-moz-box-shadow:1px 1px 0 #333;box-shadow:1px 1px 0 #333;content:"";display:block;height:1px;width:330px;width:15rem;margin:16px auto;margin:.75rem auto}.reveal-panel .reveal-panel__bio-content-subtitle{font-family:URWGroteskCon-Lig,sans-serif;font-size:44px;font-size:2rem;padding:0;text-align:center;text-transform:uppercase}.reveal-panel .reveal-panel__bio-content-md{color:#333;padding-bottom:66px;padding-bottom:3rem}.reveal-panel .reveal-panel__bio-content-md h3{font-family:URWGroteskCon-Lig,sans-serif;font-size:44px;font-size:2rem;line-height:1;padding:66px 0 33px;padding:3rem 0 1.5rem;text-align:center}.no-cssgradients .reveal-panel .reveal-panel__pic:after{display:none}.reveal-panel__close{width:75px;height:75px;overflow:hidden;position:fixed;top:25px;right:25px;background:url(/images/svg/reveal-icon-close.svg) no-repeat center center;text-indent:100%;white-space:nowrap;z-index:3001;display:none}.reveal-panel__close.is-visible{display:block;-webkit-animation:reveal__move-in .8s;-moz-animation:reveal__move-in .8s;-o-animation:reveal__move-in .8s;animation:reveal__move-in .8s}.reveal__overlay{position:absolute;top:0;left:0;width:100%;height:100%;background:rgba(0,122,194,.8);cursor:pointer;display:none;z-index:2000}@-webkit-keyframes reveal__fade-in{0%{opacity:0;filter:alpha(opacity=0)}100%{opacity:1;filter:alpha(opacity=100)}}@-moz-keyframes reveal__fade-in{0%{opacity:0;filter:alpha(opacity=0)}100%{opacity:1;filter:alpha(opacity=100)}}@-o-keyframes reveal__fade-in{0%{opacity:0;filter:alpha(opacity=0)}100%{opacity:1;filter:alpha(opacity=100)}}@keyframes reveal__fade-in{0%{opacity:0;filter:alpha(opacity=0)}100%{opacity:1;filter:alpha(opacity=100)}}@-webkit-keyframes reveal__move-in{0%{-webkit-transform:translateX(100px) rotate(0deg);transform:translateX(100px) rotate(0deg)}100%{-webkit-transform:translateX(0) rotate(540deg);transform:translateX(0) rotate(540deg)}}@-moz-keyframes reveal__move-in{0%{-moz-transform:translateX(100px) rotate(0deg);transform:translateX(100px) rotate(0deg)}100%{-moz-transform:translateX(0) rotate(540deg);transform:translateX(0) rotate(540deg)}}@-o-keyframes reveal__move-in{0%{-o-transform:translateX(100px) rotate(0deg);transform:translateX(100px) rotate(0deg)}100%{-o-transform:translateX(0) rotate(540deg);transform:translateX(0) rotate(540deg)}}@keyframes reveal__move-in{0%{-webkit-transform:translateX(100px) rotate(0deg);-moz-transform:translateX(100px) rotate(0deg);-o-transform:translateX(100px) rotate(0deg);transform:translateX(100px) rotate(0deg)}100%{-webkit-transform:translateX(0) rotate(540deg);-moz-transform:translateX(0) rotate(540deg);-o-transform:translateX(0) rotate(540deg);transform:translateX(0) rotate(540deg)}}.grid{overflow:hidden;margin:0;width:100%;max-width:1920px;list-style:none;text-align:center}.grid figure{position:relative;z-index:1;display:inline-block;overflow:hidden;margin:-5px -3px;margin:-.23rem -.15rem;width:50%;height:400px;background:#3085a3;text-align:center;cursor:pointer}.grid figure img{position:relative;display:block;min-height:100%;opacity:.8;filter:alpha(opacity=80)}.grid figure figcaption{padding:44px;padding:2rem;color:#fff;text-transform:uppercase;font-size:27px;font-size:1.25rem;-webkit-backface-visibility:hidden;-moz-backface-visibility:hidden;backface-visibility:hidden}.grid figure figcaption:before,.grid figure figcaption:after{pointer-events:none}.grid figure figcaption,.grid figure a{position:absolute;top:0;left:0;width:100%;height:100%}.grid figure a{z-index:1000;text-indent:200%;white-space:nowrap;font-size:0;opacity:0;filter:alpha(opacity=0)}.grid figure h2{word-spacing:-3px;word-spacing:-.15rem;font-size:44px;font-size:2rem;font-weight:300}.grid figure h2 span{font-weight:800}.grid figure h2,.grid figure p{margin:0}.grid figure p{letter-spacing:1px}figure.effect-oscar{background:rgba(239,62,66,.8)}figure.effect-oscar img{opacity:.9;filter:alpha(opacity=90);-webkit-transition:opacity .35s;-moz-transition:opacity .35s;-o-transition:opacity .35s;transition:opacity .35s}figure.effect-oscar figcaption{padding:66px;padding:3rem;background-color:rgba(0,122,194,.7);-webkit-transition:background-color .35s;-moz-transition:background-color .35s;-o-transition:background-color .35s;transition:background-color .35s}figure.effect-oscar figcaption:before{position:absolute;top:30px;right:30px;bottom:30px;left:30px;border:1px solid #fff;content:''}figure.effect-oscar h2{margin:10% 0 10px;-webkit-transition:-webkit-transform .35s;-moz-transition:-moz-transform .35s;-o-transition:-o-transform .35s;transition:transform .35s;-webkit-transform:translate3d(0,100%,0);-moz-transform:translate3d(0,100%,0);transform:translate3d(0,100%,0)}figure.effect-oscar figcaption:before,figure.effect-oscar p{opacity:0;filter:alpha(opacity=0);-webkit-transition:opacity .35s,-webkit-transform .35s;-moz-transition:opacity .35s,-moz-transform .35s;-o-transition:opacity .35s,-o-transform .35s;transition:opacity .35s,transform .35s;-webkit-transform:scale(0);-moz-transform:scale(0);-ms-transform:scale(0);-o-transform:scale(0);transform:scale(0)}figure.effect-oscar:hover h2{-webkit-transform:translate3d(0,0,0);-moz-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}figure.effect-oscar:hover figcaption:before,figure.effect-oscar:hover p{opacity:1;filter:alpha(opacity=100);-webkit-transform:scale(1);-moz-transform:scale(1);-ms-transform:scale(1);-o-transform:scale(1);transform:scale(1)}figure.effect-oscar:hover figcaption{background-color:rgba(58,52,42,0)}figure.effect-oscar:hover img{opacity:.2;filter:alpha(opacity=20)}.flipGallery__front,.flipGallery__back{-webkit-backface-visibility:hidden;-moz-backface-visibility:hidden;backface-visibility:hidden;-webkit-transition:.6s;-moz-transition:.6s;-o-transition:.6s;transition:.6s;-webkit-transform-style:preserve-3d;-moz-transform-style:preserve-3d;transform-style:preserve-3d;position:absolute;top:0;left:0}.flipGallery__box,.flipGallery__front,.flipGallery__back{width:250px;height:250px}.flipGallery{background-color:#007ac2;text-align:center}.flipGallery__heading{color:#fff;font-family:URWGroteskCon-Lig,sans-serif;font-size:66px;font-size:3rem;line-height:1;margin:0;padding-top:5rrem;position:relative;text-align:center;text-transform:uppercase}.flipGallery__box{-webkit-perspective:1000;-moz-perspective:1000;perspective:1000;-webkit-transform-style:preserve-3d;-moz-transform-style:preserve-3d;transform-style:preserve-3d;display:inline-block;margin:0 1px 1px}.flipGallery__box:hover .flipGallery__back{-webkit-transform:rotateY(0deg);-moz-transform:rotateY(0deg);transform:rotateY(0deg)}.flipGallery__box:hover .flipGallery__front{-webkit-transform:rotateY(180deg);-moz-transform:rotateY(180deg);transform:rotateY(180deg)}.flipGallery__back{background-color:#fec057;font-size:2em;padding-top:.5em;-webkit-transform:rotateY(-180deg);-moz-transform:rotateY(-180deg);transform:rotateY(-180deg)}.flipGallery__back__heading{font-family:URWGroteskCon-Bol,sans-serif;line-height:1}.flipGallery__back__text{font-family:URWGroteskCon-Lig,sans-serif}.flipGallery__flipper{-webkit-transition:.6s;-moz-transition:.6s;-o-transition:.6s;transition:.6s;-webkit-transform-style:preserve-3d;-moz-transform-style:preserve-3d;transform-style:preserve-3d;position:relative}@media(max-width:1024px){[class*=__container]{max-width:1024px}a.brandmark{font-size:1.5rem}.tagline{font-size:1rem}}@media(min-width:350px) and (max-width:767px) and (-webkit-min-device-pixel-ratio:3),(min-width:350px) and (max-width:767px) and (-webkit-min-device-pixel-ratio:3.6458333333333335),(min-width:350px) and (max-width:767px) and (-o-min-device-pixel-ratio:4557291666666667/1250000000000000),(min-width:350px) and (max-width:767px) and (min-resolution:350dpi){.fixed-img{background-attachment:scroll}}@media(min-width:769px){.fixed-img{background-attachment:scroll}}@media(max-width:768px){a.brandmark{font-size:1rem}.tagline{display:none}.laxnav__bar{padding:2rem 1rem}.laxnav__menu{width:80%}.laxnav__link-teaser{display:none}.icon-btn span{display:none}}@media(min-width:769px) and (max-width:1024px){.imgBanner__heading{font-size:6rem;margin:0;padding-top:10rem}.imgBanner__text{padding-bottom:10rem}.megaStatement__heading{font-size:4rem;margin-top:33px;margin-bottom:33px}.megaCTA__heading{font-size:6rem}.megaCTA__text{font-size:4rem}}@media only screen and (min-width:768px){main.slide-out{-webkit-transform:translateX(-600px);-moz-transform:translateX(-600px);-ms-transform:translateX(-600px);-o-transform:translateX(-600px);transform:translateX(-600px)}.reveal li{display:inline-block;width:45%}.reveal li:nth-child(3n){margin-right:0}.reveal-panel{width:600px;-webkit-transform:translateX(600px);-moz-transform:translateX(600px);-ms-transform:translateX(600px);-o-transform:translateX(600px);transform:translateX(600px)}.reveal-panel .reveal-panel__bio-content{padding:2rem}.reveal-panel .reveal-panel__bio-content p{margin:2rem 0}}@media only screen and (min-width:1200px){main.slide-out{-webkit-transform:translateX(-800px);-moz-transform:translateX(-800px);-ms-transform:translateX(-800px);-o-transform:translateX(-800px);transform:translateX(-800px)}}@media only screen and (min-width:1000px){.reveal-panel{-moz-box-shadow:-10px 0 100px #333;box-shadow:-10px 0 100px #333;width:900px;-webkit-transform:translateX(1000px);-moz-transform:translateX(1000px);-ms-transform:translateX(1000px);-o-transform:translateX(1000px);transform:translateX(1000px)}.reveal-panel .reveal-panel__pic:after{height:150px}.reveal-panel .reveal-panel__bio-content{padding:4rem;-webkit-transform:translateY(-80px);-moz-transform:translateY(-80px);-ms-transform:translateY(-80px);-o-transform:translateY(-80px);transform:translateY(-80px)}.no-cssgradients .reveal-panel .reveal-panel__bio-content{-webkit-transform:translateY(0);-moz-transform:translateY(0);-ms-transform:translateY(0);-o-transform:translateY(0);transform:translateY(0)}}/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;base64, */